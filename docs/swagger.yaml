basePath: /api/v1
definitions:
  controllers.AnyResponse:
    properties:
      data:
        description: Используем указатель и omitempty
      errors: {}
      meta: {}
      status:
        type: string
    type: object
  controllers.ResponseTableAvaible:
    properties:
      capacity:
        type: integer
      id:
        type: string
      is_available:
        type: boolean
      position_x:
        type: number
      position_y:
        type: number
      position_z:
        type: number
      restaurant_id:
        type: string
      table_number:
        type: integer
    type: object
  controllers.contactsRequest:
    properties:
      name:
        type: string
      phone:
        type: string
    type: object
  controllers.contactsResponse:
    properties:
      name:
        type: string
      phone:
        type: string
    type: object
  controllers.reservationRequest:
    properties:
      capacity:
        type: integer
      contacts:
        $ref: '#/definitions/controllers.contactsRequest'
      date_end:
        type: string
      date_start:
        type: string
      table:
        items:
          type: string
        type: array
    type: object
  controllers.updateUserData:
    properties:
      name:
        type: string
      phone:
        type: string
    type: object
  controllers.userBookingResponse:
    properties:
      capacity:
        type: integer
      contacts:
        $ref: '#/definitions/controllers.contactsResponse'
      end_time:
        type: string
      id:
        type: string
      restaurant_id:
        type: string
      start_time:
        type: string
      status:
        type: string
      table:
        items:
          $ref: '#/definitions/controllers.ResponseTableAvaible'
        type: array
      user_id:
        type: string
    type: object
  controllers.userRequestRegisterTest:
    properties:
      name:
        type: string
      phone:
        type: string
      telegram:
        type: integer
    type: object
  controllers.userResponse:
    properties:
      id:
        type: string
      name:
        type: string
      phone:
        type: string
      telegram_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a booking system.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Booking System API
  version: "1.0"
paths:
  /{restaurantId}/booking:
    post:
      consumes:
      - application/json
      description: Create a new booking for the specified restaurant
      parameters:
      - description: Restaurant ID
        in: path
        name: restaurantId
        required: true
        type: string
      - description: Booking data
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/controllers.reservationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Booking created successfully
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.userBookingResponse'
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new booking
      tags:
      - booking
  /{restaurantId}/bookings/{date}:
    get:
      description: Get available bookings for a specific date and restaurant
      parameters:
      - description: Restaurant ID
        in: path
        name: restaurantId
        required: true
        type: string
      - description: Date in YYYY-MM-DD format
        in: path
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved available bookings
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/controllers.ResponseTableAvaible'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
      summary: Get available bookings for a date
      tags:
      - booking
  /auth/telegram:
    get:
      description: Authenticate a user using Telegram credentials
      parameters:
      - description: Telegram user ID
        in: query
        name: id
        required: true
        type: string
      - description: User's first name
        in: query
        name: first_name
        required: true
        type: string
      - description: User's photo URL
        in: query
        name: photo_url
        type: string
      - description: User's username
        in: query
        name: username
        type: string
      - description: Authentication date
        in: query
        name: auth_date
        required: true
        type: string
      - description: Telegram hash
        in: query
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authenticated
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.userResponse'
                meta:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
      summary: Authenticate via Telegram
      tags:
      - auth
  /auth/test:
    post:
      consumes:
      - application/json
      description: Test authentication endpoint
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.userRequestRegisterTest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authenticated
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.userResponse'
                meta:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
      summary: Test authentication
      tags:
      - auth
  /booking/{id}:
    get:
      description: Get a specific booking by its ID
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved booking
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.userBookingResponse'
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
      summary: Get booking by ID
      tags:
      - booking
  /booking/{id}/{status}:
    patch:
      description: Update the status of a specific booking by its ID
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: string
      - description: New status
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Booking status updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update booking status
      tags:
      - booking
  /booking/me:
    get:
      description: Get all bookings for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved bookings
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/controllers.userBookingResponse'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get user bookings
      tags:
      - booking
  /booking/me/{date}:
    get:
      description: Get all bookings for the authenticated user on a specific date
      parameters:
      - description: Date in YYYY-MM-DD format
        in: path
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved bookings
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/controllers.userBookingResponse'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get user bookings for a date
      tags:
      - booking
  /me:
    get:
      description: Get information about the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user info
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.userResponse'
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get user information
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Update the authenticated user's information
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.updateUserData'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/controllers.AnyResponse'
            - properties:
                errors:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update user information
      tags:
      - user
swagger: "2.0"
